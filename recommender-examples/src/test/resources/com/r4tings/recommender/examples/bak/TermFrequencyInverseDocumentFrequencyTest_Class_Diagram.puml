@startuml

skinparam defaultFontName "D2Coding ligature"
skinparam defaultFontSize 11
'skinparam linetype ortho
left to right direction


abstract class org.apache.spark.ml.JavaParams{
    + {abstract} Estimator copy(ParamMap extra)
    + {abstract} String uid()
}

interface com.r4tings.recommender.common.ml.param.Verbose{
    ~ BooleanParam verbose()
    ~ Boolean getVerbose()
    ~ Verbose setVerbose(Boolean value)
}

interface com.r4tings.recommender.common.ml.param.OutputCol{
    ~ Param<String> outputCol()
    ~ String getOutputCol()
    ~ OutputCol setOutputCol(String values)
}

interface com.r4tings.recommender.common.ml.param.RatingCol{
    ~ Param<String> userCol()
    ~ Param<String> itemCol()
    ~ Param<String> ratingCol()
    ~ String getUserCol()
    ~ String getItemCol()
    ~ String getRatingCol()
    ~ RatingCol setUserCol(String value)
    ~ RatingCol setItemCol(String value)
    ~ RatingCol setRatingCol(String value)
}

org.apache.spark.ml.JavaParams <|-left- com.r4tings.recommender.common.ml.CommonParams

com.r4tings.recommender.common.ml.param.Verbose <|.. com.r4tings.recommender.common.ml.CommonParams
com.r4tings.recommender.common.ml.param.OutputCol <|.. com.r4tings.recommender.common.ml.CommonParams
com.r4tings.recommender.common.ml.param.RatingCol <|.. com.r4tings.recommender.common.ml.CommonParams


abstract class com.r4tings.recommender.common.ml.CommonParams<T extends CommonParams<T>>{
    + CommonParams(String prefix)
    + Estimator copy(ParamMap extra)
    + String uid()
    + BooleanParam verbose()
    + Param<String> outputCol()
    + Param<String> userCol()
    + Param<String> itemCol()
    + Param<String> ratingCol()
    + Boolean getVerbose()
    + String getOutputCol()
    + String getUserCol()
    + String getItemCol()
    + String getRatingCol()
    + Boolean getVerbose()
    + String getOutputCol()
    + String getUserCol()
    + String getItemCol()
    + String getRatingCol()
    + T setVerbose(Boolean value)
    + T setOutputCol(String value)
    + T setUserCol(String value)
    + T setItemCol(String value)
    + T setRatingCol(String value)
    + T setCriterion(Criterion value)
    + T setCriterionCol(String value)
    + T setImputeZero(Boolean value)
    + T setIds(Object... value)
    # {abstract} T self()
}

com.r4tings.recommender.common.ml.CommonParams <|-left- com.r4tings.recommender.model.tfidf.TermFrequencyInverseDocumentFrequencyParams

interface com.r4tings.recommender.common.ml.param.TermCol{
    ~ Param<String> termCol()
    ~ String getTermCol()
    ~ TermCol setTermCol(String values)
}

com.r4tings.recommender.common.ml.param.TermCol <|.. com.r4tings.recommender.model.tfidf.TermFrequencyInverseDocumentFrequencyParams

class com.r4tings.recommender.model.tfidf.TermFrequencyInverseDocumentFrequencyParams{
    + TermFrequencyInverseDocumentFrequencyParams()
    + Param<String> termCol()
    + DoubleParam threshold()
    + Param<UserDefinedFunction> similarityMeasure()
    + String getTermCol()
    + Double getThreshold()
    + TermFrequencyInverseDocumentFrequencyParams setTermCol(String values)
    + TermFrequencyInverseDocumentFrequencyParams setThreshold(Double value)
    + TermFrequencyInverseDocumentFrequencyParams setSimilarityMeasure(UserDefinedFunction value)
    # T self()
}

class com.r4tings.recommender.model.tfidf.TermFrequencyInverseDocumentFrequency{
    + TermFrequencyInverseDocumentFrequency(TermFrequencyInverseDocumentFrequencyParams params)
    + Dataset<Row> recommend(Dataset<Row> ratings, Dataset<Row> terms, String... userId)
    # Dataset<Row> compute(Dataset<Row> ratingDS, Dataset<Row> termDS, Object[] ids)
}

com.r4tings.recommender.model.tfidf.TermFrequencyInverseDocumentFrequency o-- com.r4tings.recommender.model.tfidf.TermFrequencyInverseDocumentFrequencyParams


@enduml