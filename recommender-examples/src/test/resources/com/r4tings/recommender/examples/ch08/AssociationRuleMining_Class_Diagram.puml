@startuml

scale 1
skinparam defaultFontName "D2Coding ligature"
skinparam defaultFontSize 11
skinparam shadowing false
skinparam linetype ortho
left to right direction

package org.apache.spark.ml {

    abstract class JavaParams #Wheat {
        + {abstract} Estimator copy(ParamMap extra)
        + {abstract} String uid()
    }

}

package com.r4tings.recommender.common.ml {

    package com.r4tings.recommender.common.ml.param {

        interface RatingCol{
            ~ Param<String> userCol()
            ~ Param<String> itemCol()
            ~ Param<String> ratingCol()
            ~ String getUserCol()
            ~ String getItemCol()
            ~ String getRatingCol()
            ~ RatingCol setUserCol(String value)
            ~ RatingCol setItemCol(String value)
            ~ RatingCol setRatingCol(String value)
        }

        interface OutputCol{
            ~ Param<String> outputCol()
            ~ String getOutputCol()
            ~ OutputCol setOutputCol(String values)
        }

        interface Verbose{
            ~ BooleanParam verbose()
            ~ Boolean getVerbose()
            ~ Verbose setVerbose(Boolean value)
        }

    }

    abstract class CommonParams<T extends CommonParams<T>>{
        + CommonParams(String prefix)
        + Estimator copy(ParamMap extra)
        + String uid()
        + BooleanParam verbose()
        + Param<String> outputCol()
        + Param<String> userCol()
        + Param<String> itemCol()
        + Param<String> ratingCol()
        + Boolean getVerbose()
        + String getOutputCol()
        + String getUserCol()
        + String getItemCol()
        + String getRatingCol()
        + Boolean getVerbose()
        + String getOutputCol()
        + String getUserCol()
        + String getItemCol()
        + String getRatingCol()
        + T setVerbose(Boolean value)
        + T setOutputCol(String value)
        + T setUserCol(String value)
        + T setItemCol(String value)
        + T setRatingCol(String value)
        + T setCriterion(Criterion value)
        + T setCriterionCol(String value)
        + T setImputeZero(Boolean value)
        + T setIds(Object... value)
        # {abstract} T self()
    }

    abstract class AbstractRecommender{
        + AbstractRecommender(CommonParams<? extends CommonParams> params)
        + Dataset<Row> recommend(Dataset<Row> ratings, int topN, Object... id)
        # {abstract} Dataset<Row> compute(Dataset<Row> ratingDS, Object[] ids)
    }

    JavaParams <|-left- CommonParams

    OutputCol <|.. CommonParams
    Verbose <|.. CommonParams
    RatingCol <|.. CommonParams

    AbstractRecommender o-right- CommonParams

}

package com.r4tings.recommender.model.arm {

    class AssociationRuleMiningParams{
        + AssociationRuleMiningParams()
        + DoubleParam minSupport()
        + DoubleParam minConfidence()
        + Double getMinSupport()
        + Double getMinConfidence()
        + AssociationRuleMiningParams setMinSupport(Double value)
        + AssociationRuleMiningParams setMinConfidence(Double value)
        # T self()
    }

    class AssociationRuleMining{
        + AssociationRuleMining(AssociationRuleMiningParams params)
        # Dataset<Row> compute(Dataset<Row> ratingDS, Object[] ids)
    }



    AssociationRuleMining o-left- AssociationRuleMiningParams

    CommonParams <|-- AssociationRuleMiningParams

    AbstractRecommender <|-- AssociationRuleMining


}

com.r4tings.recommender.common.ml -[hidden]- com.r4tings.recommender.model.arm

@enduml