@startuml

scale 1

skinparam defaultFontName "D2Coding ligature"
skinparam defaultFontSize 11
skinparam shadowing false
skinparam classAttributeIconSize 0

skinparam linetype ortho
left to right direction


package org.apache.spark.ml {
    abstract class JavaParams{
        + {abstract} Estimator copy(ParamMap extra)
        + {abstract} String uid()
    }
}
together {
package com.r4tings.recommender.common.ml {
    abstract class CommonParams<T extends CommonParams<T>>{
        + CommonParams(String prefix)
        + Estimator copy(ParamMap extra)
        + String uid()
        + BooleanParam verbose()
        + Param<String> outputCol()
        + Param<String> userCol()
        + Param<String> itemCol()
        + Param<String> ratingCol()
        + Boolean getVerbose()
        + String getOutputCol()
        + String getUserCol()
        + String getItemCol()
        + String getRatingCol()
        + Boolean getVerbose()
        + String getOutputCol()
        + String getUserCol()
        + String getItemCol()
        + String getRatingCol()
        + T setVerbose(Boolean value)
        + T setOutputCol(String value)
        + T setUserCol(String value)
        + T setItemCol(String value)
        + T setRatingCol(String value)
        + T setCriterion(Criterion value)
        + T setCriterionCol(String value)
        + T setImputeZero(Boolean value)
        + T setIds(Object... value)
        # {abstract} T self()
    }
    abstract class AbstractRecommender{
    + AbstractRecommender(CommonParams<? extends CommonParams> params)
    + Dataset<Row> recommend(Dataset<Row> ratings, int topN, Object... id)
    # {abstract} Dataset<Row> compute(Dataset<Row> ratingDS, Object[] ids)
    }

    package com.r4tings.recommender.common.ml.param {
        interface Verbose{
            ~ BooleanParam verbose()
            ~ Boolean getVerbose()
            ~ Verbose setVerbose(Boolean value)
        }
        interface OutputCol{
            ~ Param<String> outputCol()
            ~ String getOutputCol()
            ~ OutputCol setOutputCol(String values)
        }
        interface RatingCol{
            ~ Param<String> userCol()
            ~ Param<String> itemCol()
            ~ Param<String> ratingCol()
            ~ String getUserCol()
            ~ String getItemCol()
            ~ String getRatingCol()
            ~ RatingCol setUserCol(String value)
            ~ RatingCol setItemCol(String value)
            ~ RatingCol setRatingCol(String value)
        }

          Verbose .[hidden]left. OutputCol
          OutputCol .[hidden]left. RatingCol

    }
}

package com.r4tings.recommender.model.svd {
    class BaselineSingleValueDecompositionParams{
        + BaselineSingleValueDecompositionParams()
        + Param<CommonEstimator> baselinePredictor()
        + IntParam k()
        + CommonEstimator getBaselinePredictor()
        + Integer getK()
        + BaselineSingleValueDecompositionParams setBaselinePredictor(CommonEstimator value)
        + BaselineSingleValueDecompositionParams setK(Integer value)
        # T self()
    }
    class BaselineSingleValueDecomposition{
        + BaselineSingleValueDecomposition(BaselineSingleValueDecompositionParams params)
        # Dataset<Row> compute(Dataset<Row> ratingDS, Object[] ids)
    }
}

JavaParams <|-left- CommonParams

Verbose <|.. CommonParams
OutputCol <|.. CommonParams
RatingCol <|.. CommonParams

CommonParams <.up. AbstractRecommender

CommonParams <|-left- BaselineSingleValueDecompositionParams

AbstractRecommender <|-left- BaselineSingleValueDecomposition

BaselineSingleValueDecompositionParams <.up. BaselineSingleValueDecomposition


@enduml
